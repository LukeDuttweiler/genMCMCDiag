% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genDiagnostic.R
\name{genDiagnostic}
\alias{genDiagnostic}
\title{Generate Diagnostics for Markov Chain Monte Carlo Draws}
\usage{
genDiagnostic(
  mhDraws,
  method = c("standard", "ts", "lanfear", "likelihood"),
  diagnostics = c("traceplot", "ess", "gelmanRubin"),
  distance = NULL,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{mhDraws}{A list of MCMC draws, where each element is a chain represented as an mcmcObj}

\item{method}{Method for transforming the MCMC draws. Options include 'standard', 'ts', 'lanfear', or a custom transformation function. See details.}

\item{diagnostics}{A character vector or list of diagnostic functions to be evaluated. Options include 'traceplot', 'ess', 'gelmanRubin', or custom functions. See details.}

\item{distance}{Function for evaluating distance between MCMC draws if required by 'method'. Note that the lanfear and ts methods ALWAYS require a distance function.}

\item{verbose}{If TRUE, informative messages are displayed.}

\item{...}{Additional arguments to be passed to the transformation method. See tsTransform for details on the 'ts' transformation, and lanfearTransform for details on the 'lanfear' method.}
}
\value{
An object of class 'mcmcDiag', containing evaluated diagnostics, transformed draws, and function call details.
}
\description{
This function generates diagnostics for Markov Chain Monte Carlo (MCMC) draws, transforming the draws if specified, and evaluating selected diagnostics.
}
\details{
Built-in transformation methods can be called with the appropriate character string in the 'method'
argument. For details on a particular method use ?'method'Transform. Custom transform
functions may be added as well. A custom function must be written to accept a list of mcmcObj
type objects, and output a list of mcmcObj type objects (each element in the list is
a chain).

Built-in diagnostics can be called with the appropriate character string in the 'diagnostics'
argument. Additional custom diagnostic functions may be written. These functions should
act on a list of mcmcObj type objects, and may output in any format.

For details on mcmcObj objects, see ?mcmcObj
}
\examples{
#Example using standard Traceplot
tstS <- genDiagnostic(uniMCMCResults)
tstS$diagnostics

#Example using 'lanfear' traceplot
tstL <- genDiagnostic(uniMCMCResults, method = 'lanfear', distance = eucDist,
                      reference = 0)
tstL$diagnostics

#Example using 'ts' traceplot (not run here for sake of time during package build)
#tstTS <- genDiagnostic(uniMCMCResults, method = 'ts', distance = eucDist,
#                        fuzzy = TRUE, fuzzyDist = .5)
#tstTS$diagnostics

#Examples using bayesian network sample data
tstBN1 <- genDiagnostic(bnMCMCResults, method = 'lanfear', distance = partitionDist)
tstBN1$diagnostics

tstBN2 <- genDiagnostic(bnMCMCResults, method = 'ts', distance = partitionDist)
tstBN2$diagnostics
}
